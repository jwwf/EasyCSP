<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2015.1 (Build 429U)" ts="2015-07-31 11:56:32">
<Class name="EasyCSP.Validator.Validators.Password">
<Description><![CDATA[
Check a password for strength
Clone off this class and modify it if it doesn't suit site requirements

  <p>Copyright (c) 2011 James W "Bill" Westley-Farrell</p>

  <p>Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at</p>

      <p><a href=http://www.apache.org/licenses/LICENSE-2.0">Apache License 2.0</a>

  <p>Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.</p>]]></Description>
<Language>mvbasic</Language>
<Super>EasyCSP.Validator.Base</Super>
<TimeChanged>63607,74827.70706</TimeChanged>
<TimeCreated>63459,77456.807683</TimeCreated>

<Parameter name="message">
<Default>A password must be at least 8 characters long and must contain at least one uppercase letter, one lowercase letter, and a symbol.</Default>
</Parameter>

<Method name="run">
<ClassMethod>1</ClassMethod>
<FormalSpec>value:%String=""</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	
	if "EasyCSP.Validator.Validators.isMD5Hash"->run(value) then return @true ; * this is already a hash

	if $get(value) = "" then return @false ; * it can't be empty
	
	if len(value) < 8 then return @false ; * it has to be at least eight characters long
		
	allCaps = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	allLowers = "abcdefghijklmnopqrstuvwxyz"
	dingbats = "`~!@#$%^&*()_-+=[]{}\|;:/?.>,<" : '"'
		
	alphaTest = oconv(value, "MCA") ; * leave only the alphas
	if alphaTest = "" then return false; * there has to be at least one alpha characer
	if alphaTest = value then return false; * there has to be at least one numeric (and possibly a dingbat)
		
	numTest = oconv(value, "MCN") ; * leave only the numbers
	if numTest = "" then return false; * there has to be at least one numeric characer
	if numTest = value then return false; * there has to be at least one alpha (and possibly a dingbat)
		
	hasCaps = convert(allCaps, '', value); * filter out the caps
	if len(value) = len(hasCaps) then return @false; * there has to be at least one capital letter
		
	hasLowers = convert(allLowers, '', value) ; * filter out the lowercase letters
	if len(value) = len(allLowers) then return @false; * there has to be at least one lower case letter
		
	hasDingbats = convert(dingbats, '', value)
	if len(value) = len(hasDingbats) then return @false ; * there should be at least one dingbat character
		
	return @true
]]></Implementation>
</Method>
</Class>
</Export>
