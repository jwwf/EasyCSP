<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2015.1 (Build 429U)" ts="2015-07-31 11:56:30">
<Class name="EasyCSP.Conversions.btx">
<Description><![CDATA[
binary string to hex value
  <p>Copyright (c) 2011 James W "Bill" Westley-Farrell</p>

  <p>Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at</p>

      <p><a href=http://www.apache.org/licenses/LICENSE-2.0">Apache License 2.0</a>

  <p>Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.</p>]]></Description>
<Language>mvbasic</Language>
<Super>%RegisteredObject</Super>
<TimeChanged>63474,30058.542823</TimeChanged>
<TimeCreated>63459,77918.199683</TimeCreated>

<Method name="run">
<Description>
Convert a binary value (in a string) to a hex value (returned in a string).
This function is most often called by networking routines.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>BinValue:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[

   Binary = '0000.0001.0010.0011.0100.0101.0110.0111'
   Binary := '.1000.1001.1010.1011.1100.1101.1110.1111'
   
   CONVERT '.' TO @fm IN Binary
   
   Hex = '0123456789ABCDEF'

   OutputHex = ""
   BinValue.Length = LEN( BinValue )

   FOR BitCheck = 1 TO BinValue.Length
      IF NOT( BinValue[ BitCheck, 1 ] MATCHES "'0'Ã½'1'" ) THEN
         RETURN( "" )
      END
   NEXT

   BinValue = BinValue "R%32"
   BinValue.Length = LEN( BinValue )

   FOR Digit = BinValue.Length TO 1 STEP -4

      Nybble = BinValue[ Digit - 3, 4 ]
      LOCATE( Nybble, Binary; Pos ) THEN
         OutputHex = Hex[ Pos, 1 ] : OutputHex
      END

   NEXT
   
   RETURN( OutputHex )
]]></Implementation>
</Method>
</Class>
</Export>
