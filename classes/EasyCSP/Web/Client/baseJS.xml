<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2015.1 (Build 429U)" ts="2015-07-31 11:56:33">
<Class name="EasyCSP.Web.Client.baseJS">
<Description>
List the base javascript/jQuery packages the framework requires to create the UI</Description>
<Super>EasyCSP.Core.ParameterList</Super>
<TimeChanged>63760,42751.921295</TimeChanged>
<TimeCreated>63542,45012.143094</TimeCreated>

<Property name="inDebug">
<Type>%Boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="packages">
<Type>EasyCSP.Core.ParameterList</Type>
</Property>

<Method name="%OnNew">
<FormalSpec>inDebug:%Boolean=0</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	set:$get(inDebug)="" ..inDebug=0
	quit $$$OK
]]></Implementation>
</Method>

<Method name="init">
<ReturnType>EasyCSP.Core.ParameterList</ReturnType>
<Implementation><![CDATA[
	set ..packages = ##class(EasyCSP.Core.ParameterList).%New()
	
	if ..inDebug {
		do ..addPackage("jquery", "jquery-2.1.3.js")
	} else {
		do ..addPackage("jquery", "jquery-2.1.3.min.js")
	}
	do ..addPackage("jqueryui", "source/jquery-ui/jquery-ui.min.js", "jquery")
	//do ..addPackage("jqueryuiiI18n", "source/jui/js/jquery-ui-i18n.min.js", "jqueryui")
	do ..addPackage("bootstrap", "source/bootstrap/dist/js/bootstrap.min.js", "jquery")
	do ..addPackage("modernizr", "libs/modernizr.custom.51814.js", "jquery")
	
	do ..addPackage("bgiframe", "source/jquery.bgiframe.js", "jquery")
	do ..addPackage("ajaxqueue", "source/jquery.ajaxqueue.js", "jquery")
	do ..addPackage("autocomplete", "source/jquery.autocomplete.js", $lb("jquery","bgiframe","ajaxqueue"))
	
	if ..inDebug {
		do ..addPackage("maskedinput", "source/jquery.maskedinput.js", "jquery")
	} else {
		do ..addPackage("maskedinput", "source/jquery.maskedinput.min.js", "jquery")
	}
	
	do ..addPackage("cookie", "source/jquery.cookie.js", "jquery")
	do ..addPackage("treeview", "source/jquery.treeview.js,jquery.treeview.edit.js,jquery.treeview.async.js", "jquery,cookie")
	do ..addPackage("multifile", "source/jquery.multifile.js", "jquery")
	do ..addPackage("metadata", "source/jquery.metadata.js", "jquery")
	
	if ..inDebug {
		do ..addPackage("bbq", "source/jquery.ba-bbq.js", "jquery")
	} else {
		do ..addPackage("bbq", "source/jquery.ba-bbq.min.js", "jquery")
	}
	
	do ..addPackage("history", "source/jquery.history.js", "jquery") // not showing up
	do ..addPackage("prepareTransition", "libs/preparetransition.min.js", "jquery")
	//do ..addPackage("jqueryuiAutocomplete", "jquery.autocomplete.js", "jqueryui") // not showing up
	do ..addPackage("selectivizr", "libs/selectivizr.js", "jquery") // not showing up
	do ..addPackage("main", "main.js", "modernizr,selectivizr")
	do ..addPackage("head", "libs/head.js", "main")
	
	do ..addPackage("login", "libs/login.js", "bootstrap")
	
	do ..addPackage("validation", "jquery-validate-1.13.1.js", "jquery")
	
	do ..addPackage("modal", "libs/modal.js", "jqueryui")
	
	do ..addPackage("impromptu", "source/impromptu/jquery-impromptu.js", "jquery")
	
	Quit ..packages
]]></Implementation>
</Method>

<Method name="has">
<FormalSpec>name:%String=""</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	quit:$get(name)="" 0
	quit ..packages.isset(name)
]]></Implementation>
</Method>

<Method name="addPackage">
<Description>
The first parameter is the name of the package being added. Both scriptSource and dependencies may
be specified as a Cache %List structure or as a comma-separated string. Whitespace will automatically
be removed from comma-separated strings, thus "abc,def" and "abc, def" and $lb("abc","def") are
functionally equivalent.</Description>
<FormalSpec>packageName:%String="",js:%String="",dependencies:%List=""</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	if $get(packageName)="" quit 0
	
	if $get(js)="" quit 0	
	
	set pkg = ##class(EasyCSP.Core.ParameterList).%New()
	d pkg.set("js", js)
	d pkg.set("depends", dependencies)
	
	d ..packages.set(packageName, pkg)
	
	return 1
]]></Implementation>
</Method>
</Class>
</Export>
